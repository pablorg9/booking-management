version: '3'
services:
  security-ms:
    build: 
      context: ./services/security-ms
      dockerfile: Dockerfile
    container_name: bm-security-ms
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV}
      DB_MYSQL_HOST: ${DB_MYSQL_HOST}
      DB_MYSQL_USER: ${DB_MYSQL_USER}
      DB_MYSQL_PORT: ${DB_MYSQL_PORT}
      DB_MYSQL_DATABASE: ${DB_MYSQL_DATABASE}
      DB_MYSQL_PASSWORD: ${DB_MYSQL_PASSWORD}

      PORT: ${SECURITY_PORT}
      SECRET_JWT: ${SECRET_JWT}
    networks:
      - bm-network
    volumes:
      - ./services/security-ms/src:/security-ms/src
    ports:
      - '8080:8080'
    depends_on:
      - mysql

  booking-ms:
    build: 
      context: ./services/booking-ms
      dockerfile: Dockerfile
    container_name: bm-booking-ms
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV}
      DB_MONGO_HOST: ${DB_MONGO_HOST}
      DB_MONGO_USER: ${DB_MONGO_USER}
      DB_MONGO_PASSWORD: ${DB_MONGO_PASSWORD}
      DB_MONGO_DATABASE: ${DB_MONGO_DATABASE}
      DB_MONGO_DOCKER_PORT: ${DB_MONGO_DOCKER_PORT}

      PAYMENT_MS_URL: ${PAYMENT_MS_URL}
      PAYMENT_SERVICE_TOKEN: ${PAYMENT_SERVICE_TOKEN}
      SECRET_JWT: ${SECRET_JWT}
      PORT: ${BOOKING_PORT}
    networks:
      - bm-network
    volumes:
      - ./services/booking-ms/src:/booking-ms/src
    ports:
      - '8081:8081'
    depends_on:
      - mongo

  payment-ms:
    build: 
      context: ./services/payment-ms
      dockerfile: Dockerfile
    container_name: bm-payment-ms
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV}
      DB_POSTGRES_HOST: ${DB_POSTGRES_HOST}
      DB_POSTGRES_USER: ${DB_POSTGRES_USER}
      DB_POSTGRES_PORT: ${DB_POSTGRES_PORT}
      DB_POSTGRES_DATABASE: ${DB_POSTGRES_DATABASE}
      DB_POSTGRES_PASSWORD: ${DB_POSTGRES_PASSWORD}

      BOOKING_MS_URL: ${BOOKING_MS_URL}
      BOOKING_SERVICE_TOKEN: ${BOOKING_SERVICE_TOKEN}
      SECRET_JWT: ${SECRET_JWT}
      PORT: ${PAYMENT_PORT}
    networks:
      - bm-network
    volumes:
      - ./services/payment-ms/src:/payment-ms/src
    ports:
      - '8082:8082'
    depends_on:
      - postgres

  postgres:
    image: postgres:16
    container_name: bm-postgres
    restart: unless-stopped
    networks:
      - bm-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: ${DB_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DB_POSTGRES_PASSWORD}
      POSTGRES_DB: ${DB_POSTGRES_DATABASE}
    ports:
      - "5432:5432"

  mysql:
    image: mysql:8.4.3
    container_name: bm-mysql
    restart: unless-stopped
    networks:
      - bm-network
    volumes:
      - mysql:/var/lib/mysql
      - ./scripts/mysql:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_MYSQL_PASSWORD}
      MYSQL_DATABASE: ${DB_MYSQL_DATABASE}
      MYSQL_USER: ${DB_MYSQL_USER}
      MYSQL_PASSWORD: ${DB_MYSQL_PASSWORD}
    ports:
      - 33061:3306

  mongo:
    image: mongo:7.0.12
    container_name: bm-mongodb
    restart: unless-stopped
    networks:
      - bm-network
    volumes:
      - mongodb:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_MONGO_PASSWORD}

  mongo-express:
    image: mongo-express
    container_name: bm-mongo-express
    restart: always
    ports:
      - 27018:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_MONGO_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${DB_MONGO_EXPRESS_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${DB_MONGO_EXPRESS_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${DB_MONGO_USER}:${DB_MONGO_PASSWORD}@${DB_MONGO_HOST}:${DB_MONGO_DOCKER_PORT}/${DB_MONGO_DATABASE}?authSource=admin&retryWrites=true&w=majority
    networks:
      - bm-network
    depends_on:
      - mongo

networks:
  bm-network:
    driver: bridge

volumes:
  mysql:
  mongodb:
  postgres-data:
